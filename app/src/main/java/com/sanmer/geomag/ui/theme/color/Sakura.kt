package com.sanmer.geomag.ui.theme.color

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val sakura_light_primary = Color(0xFF9B404F)
val sakura_light_onPrimary = Color(0xFFFFFFFF)
val sakura_light_primaryContainer = Color(0xFFFFD9DC)
val sakura_light_onPrimaryContainer = Color(0xFF400011)
val sakura_light_secondary = Color(0xFF765659)
val sakura_light_onSecondary = Color(0xFFFFFFFF)
val sakura_light_secondaryContainer = Color(0xFFFFD9DC)
val sakura_light_onSecondaryContainer = Color(0xFF2C1518)
val sakura_light_tertiary = Color(0xFF785830)
val sakura_light_onTertiary = Color(0xFFFFFFFF)
val sakura_light_tertiaryContainer = Color(0xFFFFDDB7)
val sakura_light_onTertiaryContainer = Color(0xFF2A1700)
val sakura_light_error = Color(0xFFBA1A1A)
val sakura_light_errorContainer = Color(0xFFFFDAD6)
val sakura_light_onError = Color(0xFFFFFFFF)
val sakura_light_onErrorContainer = Color(0xFF410002)
val sakura_light_background = Color(0xFFFFFBFF)
val sakura_light_onBackground = Color(0xFF201A1A)
val sakura_light_surface = Color(0xFFFFFBFF)
val sakura_light_onSurface = Color(0xFF201A1A)
val sakura_light_surfaceVariant = Color(0xFFF4DDDE)
val sakura_light_onSurfaceVariant = Color(0xFF524344)
val sakura_light_outline = Color(0xFF847374)
val sakura_light_inverseOnSurface = Color(0xFFFBEEEE)
val sakura_light_inverseSurface = Color(0xFF362F2F)
val sakura_light_inversePrimary = Color(0xFFFFB2BA)
val sakura_light_shadow = Color(0xFF000000)
val sakura_light_surfaceTint = Color(0xFF9B404F)

val sakura_dark_primary = Color(0xFFFFB2BA)
val sakura_dark_onPrimary = Color(0xFF5F1223)
val sakura_dark_primaryContainer = Color(0xFF7D2939)
val sakura_dark_onPrimaryContainer = Color(0xFFFFD9DC)
val sakura_dark_secondary = Color(0xFFE5BDC0)
val sakura_dark_onSecondary = Color(0xFF43292C)
val sakura_dark_secondaryContainer = Color(0xFF5C3F42)
val sakura_dark_onSecondaryContainer = Color(0xFFFFD9DC)
val sakura_dark_tertiary = Color(0xFFE9BF8F)
val sakura_dark_onTertiary = Color(0xFF442B07)
val sakura_dark_tertiaryContainer = Color(0xFF5E411B)
val sakura_dark_onTertiaryContainer = Color(0xFFFFDDB7)
val sakura_dark_error = Color(0xFFFFB4AB)
val sakura_dark_errorContainer = Color(0xFF93000A)
val sakura_dark_onError = Color(0xFF690005)
val sakura_dark_onErrorContainer = Color(0xFFFFDAD6)
val sakura_dark_background = Color(0xFF201A1A)
val sakura_dark_onBackground = Color(0xFFECE0E0)
val sakura_dark_surface = Color(0xFF201A1A)
val sakura_dark_onSurface = Color(0xFFECE0E0)
val sakura_dark_surfaceVariant = Color(0xFF524344)
val sakura_dark_onSurfaceVariant = Color(0xFFD7C1C3)
val sakura_dark_outline = Color(0xFF9F8C8D)
val sakura_dark_inverseOnSurface = Color(0xFF201A1A)
val sakura_dark_inverseSurface = Color(0xFFECE0E0)
val sakura_dark_inversePrimary = Color(0xFF9B404F)
val sakura_dark_shadow = Color(0xFF000000)
val sakura_dark_surfaceTint = Color(0xFFFFB2BA)

val SakuraLightColorScheme = lightColorScheme(
    surfaceTint = sakura_light_surfaceTint,
    onErrorContainer = sakura_light_onErrorContainer,
    onError = sakura_light_onError,
    errorContainer = sakura_light_errorContainer,
    onTertiaryContainer = sakura_light_onTertiaryContainer,
    onTertiary = sakura_light_onTertiary,
    tertiaryContainer = sakura_light_tertiaryContainer,
    tertiary = sakura_light_tertiary,
    error = sakura_light_error,
    outline = sakura_light_outline,
    onBackground = sakura_light_onBackground,
    background = sakura_light_background,
    inverseOnSurface = sakura_light_inverseOnSurface,
    inverseSurface = sakura_light_inverseSurface,
    onSurfaceVariant = sakura_light_onSurfaceVariant,
    onSurface = sakura_light_onSurface,
    surfaceVariant = sakura_light_surfaceVariant,
    surface = sakura_light_surface,
    onSecondaryContainer = sakura_light_onSecondaryContainer,
    onSecondary = sakura_light_onSecondary,
    secondaryContainer = sakura_light_secondaryContainer,
    secondary = sakura_light_secondary,
    inversePrimary = sakura_light_inversePrimary,
    onPrimaryContainer = sakura_light_onPrimaryContainer,
    onPrimary = sakura_light_onPrimary,
    primaryContainer = sakura_light_primaryContainer,
    primary = sakura_light_primary,
)

val SakuraDarkColorScheme = darkColorScheme(
    surfaceTint = sakura_dark_surfaceTint,
    onErrorContainer = sakura_dark_onErrorContainer,
    onError = sakura_dark_onError,
    errorContainer = sakura_dark_errorContainer,
    onTertiaryContainer = sakura_dark_onTertiaryContainer,
    onTertiary = sakura_dark_onTertiary,
    tertiaryContainer = sakura_dark_tertiaryContainer,
    tertiary = sakura_dark_tertiary,
    error = sakura_dark_error,
    outline = sakura_dark_outline,
    onBackground = sakura_dark_onBackground,
    background = sakura_dark_background,
    inverseOnSurface = sakura_dark_inverseOnSurface,
    inverseSurface = sakura_dark_inverseSurface,
    onSurfaceVariant = sakura_dark_onSurfaceVariant,
    onSurface = sakura_dark_onSurface,
    surfaceVariant = sakura_dark_surfaceVariant,
    surface = sakura_dark_surface,
    onSecondaryContainer = sakura_dark_onSecondaryContainer,
    onSecondary = sakura_dark_onSecondary,
    secondaryContainer = sakura_dark_secondaryContainer,
    secondary = sakura_dark_secondary,
    inversePrimary = sakura_dark_inversePrimary,
    onPrimaryContainer = sakura_dark_onPrimaryContainer,
    onPrimary = sakura_dark_onPrimary,
    primaryContainer = sakura_dark_primaryContainer,
    primary = sakura_dark_primary,
)